//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Skills = newSkillsTable("public", "skills", "")

type skillsTable struct {
	postgres.Table

	// Columns
	ID        postgres.ColumnString
	Name      postgres.ColumnString
	Image     postgres.ColumnString
	CreatedAt postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SkillsTable struct {
	skillsTable

	EXCLUDED skillsTable
}

// AS creates new SkillsTable with assigned alias
func (a SkillsTable) AS(alias string) *SkillsTable {
	return newSkillsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SkillsTable with assigned schema name
func (a SkillsTable) FromSchema(schemaName string) *SkillsTable {
	return newSkillsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SkillsTable with assigned table prefix
func (a SkillsTable) WithPrefix(prefix string) *SkillsTable {
	return newSkillsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SkillsTable with assigned table suffix
func (a SkillsTable) WithSuffix(suffix string) *SkillsTable {
	return newSkillsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSkillsTable(schemaName, tableName, alias string) *SkillsTable {
	return &SkillsTable{
		skillsTable: newSkillsTableImpl(schemaName, tableName, alias),
		EXCLUDED:    newSkillsTableImpl("", "excluded", ""),
	}
}

func newSkillsTableImpl(schemaName, tableName, alias string) skillsTable {
	var (
		IDColumn        = postgres.StringColumn("id")
		NameColumn      = postgres.StringColumn("name")
		ImageColumn     = postgres.StringColumn("image")
		CreatedAtColumn = postgres.TimestampColumn("created_at")
		allColumns      = postgres.ColumnList{IDColumn, NameColumn, ImageColumn, CreatedAtColumn}
		mutableColumns  = postgres.ColumnList{NameColumn, ImageColumn, CreatedAtColumn}
	)

	return skillsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		Name:      NameColumn,
		Image:     ImageColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
